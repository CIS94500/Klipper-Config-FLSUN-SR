# Klipper Configurations - Flsun Super Racer
#	 ___      ___  ________  ___  ___  ________  
#	|"  \    /"  |/"       )|"  \/"  |/"       ) 
#	 \   \  //  /(:   \___/  \   \  /(:   \___/  
#	  \\  \/. ./  \___  \     \\  \/  \___  \    
#	   \.    //    __/  \\    /   /    __/  \\   
#	    \\   /    /" \   :)  /   /    /" \   :)  
#	     \__/    (_______/  |___/    (_______/   
# 
#      01010110  01010011  01011001  01010011   
#
# Auteur: Virgile de Champigny
#
# Pour compiler le firmware utiliser :
#
# cd /home/pi/klipper/
# make clean
# make menuconfig
#
# Micro-controller Architecture (STMicroelectronics STM32)
# Processor model (STM32F407)
# Bootloader offset (48KiB bootloader)
# Clock Reference (8 MHz crystal)
# Communication interface (Serial (on USB on PA11/PA12))
#
# Compiler avec la commande : make
#
# Copier sur une carte SD le fichier généré dans "out/klipper.bin"
# et renommer le en "Robin_nano_v3.bin"
# Insérer la carte SD dans l'imprimante et démmarrer celle ci
#
# Nettoyage des fichiers générés -> make clean

[include macros/*.cfg]
#[include adxl345.cfg]

####################################################################
# MAINBOARD - CONNECTED MCUS
####################################################################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_370025001851303330383638-if00
#   Run ls /dev/serial/by-id/* on your Linux OS
#   The serial port to connect to the MCU. If unsure (or if it
#   changes) see the "Where's my serial port?" section of the FAQ.
#   This parameter must be provided when using a serial port.
#baud: 250000
#   The baud rate to use. The default is 250000.
restart_method: command
#   This controls the mechanism the host will use to reset the
#   micro-controller. The choices are 'arduino', 'cheetah', 'rpi_usb',
#   and 'command'. The 'arduino' method (toggle DTR) is common on
#   Arduino boards and clones. The 'cheetah' method is a special
#   method needed for some Fysetc Cheetah boards. The 'rpi_usb' method
#   is useful on Raspberry Pi boards with micro-controllers powered
#   over USB - it briefly disables power to all USB ports to
#   accomplish a micro-controller reset. The 'command' method involves
#   sending a Klipper command to the micro-controller so that it can
#   reset itself. The default is 'arduino' if the micro-controller
#   communicates over a serial port, 'command' otherwise.

####################################################################
# MACHINE ABSOLUTE LIMITS
####################################################################

[printer]
kinematics: delta
#   The type of printer in use. This option may be one of: cartesian,
#   corexy, corexz, hybrid_corexy, hybrid_corexz, rotary_delta, delta,
#   polar, winch, or none. This
#   parameter must be specified.
max_velocity: 300
#   Maximum velocity (in mm/s) of the toolhead (relative to the
#   print). This parameter must be specified.
max_accel: 3800
#   Maximum acceleration (in mm/s^2) of the toolhead (relative to the
#   print). This parameter must be specified.
#max_accel_to_decel: 1900
#   A pseudo acceleration (in mm/s^2) controlling how fast the
#   toolhead may go from acceleration to deceleration. It is used to
#   reduce the top speed of short zig-zag moves (and thus reduce
#   printer vibration from these moves). The default is half of
#   max_accel.
square_corner_velocity: 5
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The default is 5mm/s.
max_z_velocity: 300
#   For delta printers this limits the maximum velocity (in mm/s) of
#   moves with z axis movement. This setting can be used to reduce the
#   maximum speed of up/down moves (which require a higher step rate
#   than other moves on a delta printer). The default is to use
#   max_velocity for max_z_velocity.
#max_z_accel: 3800
#   This sets the maximum acceleration (in mm/s^2) of movement along
#   the z axis. Setting this may be useful if the printer can reach higher
#   acceleration on XY moves than Z moves (eg, when using input shaper).
#   The default is to use max_accel for max_z_accel.
minimum_z_position: -5
#   The minimum Z position that the user may command the head to move
#   to. The default is 0.
#delta_radius: 151.7
#   Radius (in mm) of the horizontal circle formed by the three linear
#   axis towers. This parameter may also be calculated as:
#    delta_radius = smooth_rod_offset - effector_offset - carriage_offset
#   This parameter must be provided.
print_radius: 132
#   The radius (in mm) of valid toolhead XY coordinates. One may use
#   this setting to customize the range checking of toolhead moves. If
#   a large value is specified here then it may be possible to command
#   the toolhead into a collision with a tower. The default is to use
#   delta_radius for print_radius (which would normally prevent a
#   tower collision).

####################################################################
# IDLE TIME-OUT
####################################################################

[idle_timeout]
#   Time in seconds (300 = 5 minutes)
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 1800
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

####################################################################
# A (X-STEPPER) CONFIGURATION  ENABLE ARM LENGTH , ANGLE , POSITION ENDSTOP.
# FOR THE FIRST TIME EVER. DELTA CALIBRATE WILL ADJUST THIS AND SAVE AT THE BOTTOM.
####################################################################

[stepper_a] # X
step_pin: PE3
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: PE2
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !PE4
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
microsteps: 128
#   tmc are ment to be set to the highest value the mcu can support this does not work the same as older drivers.
#	Don't touch rotation distance just this if you want to change it (klipper will calculate stepping automatically)
#   The number of microsteps the stepper motor driver uses. This
#   parameter must be provided.
rotation_distance: 40
#	NEVER ADJUST THESE VALUES. ADJUSTING THIS WILL NOT SOLVE DIMENSION ISSUES.
#	HORIZONTAL OFFSET / FLOW. OTHERWISE BELTS, OR RAILS MAY NOT BE MOVING RIGHT FOR THIS TO HAPPEN.
#   The rotation_distance is the nominal distance (in mm) the toolhead
#   moves towards the cable winch for each full rotation of the
#   stepper motor. This parameter must be provided.
full_steps_per_rotation: 200
#	Change this to 400 for 0.9 degree steppers again kliipper will calculate the new values automatically
#   The number of full steps for one rotation of the stepper motor.
#   Set this to 200 for a 1.8 degree stepper motor or set to 400 for a
#   0.9 degree motor. The default is 200.
endstop_pin: ^PA15
#   Endstop switch detection pin. If this endstop pin is on a
#   different mcu than the stepper motor then it enables "multi-mcu
#   homing". This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
homing_speed: 60
#   This is left a bit slow for initial start up safty once everything is setup up 70-90 are reasonable.
#	(note the sr has optical endstops it can home fast This value needs to be changed on a,b,c steppers)
#   Maximum velocity (in mm/s) of the stepper when homing. The default
#   is 5mm/s.
homing_retract_dist: 5.0
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
homing_retract_speed:10
#   Speed to use on the retract move after homing in case this should
#   be different from the homing speed, which is the default for this
#   parameter
#arm_length: 315
#	note turning this one applys for b and c as well.
#   Length (in mm) of the diagonal rod that connects this tower to the
#   print head. This parameter must be provided for stepper_a; for
#   stepper_b and stepper_c this parameter defaults to the value
#   specified for stepper_a.
#position_endstop: 336.5
#	Note turning this one applys for b and c as well.
#   Distance (in mm) between the nozzle and the bed when the nozzle is
#   in the center of the build area and the endstop triggers. This
#   parameter must be provided for stepper_a; for stepper_b and
#   stepper_c this parameter defaults to the value specified for
#   stepper_a.

#-----------------------------------------------------------------#

[tmc2209 stepper_a]
uart_pin: PD5
#   The pin connected to the TMC2209 PDN_UART line. This parameter
#   must be provided.
interpolate: False
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
run_current: 1.138
#	THIS IS RMS CURRENT NOT VREF FOR TMC. tmc spreadsheet tuned.
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
sense_resistor: 0.110
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.110 ohms.
stealthchop_threshold: 99999
#	this forces always silent. due to the stepper location turning this
#	off will result in amplifed noise due to the case acoustics.
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.

####################################################################
# B (Y-STEPPER) CONFIGURATION
####################################################################

[stepper_b]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 128
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ^PD2
homing_speed: 60
homing_retract_dist: 5.0
homing_retract_speed: 10

#-----------------------------------------------------------------#

[tmc2209 stepper_b]
uart_pin: PD7
interpolate: False
run_current: 1.138
sense_resistor: 0.110
stealthchop_threshold: 99999

####################################################################
# C (Z-STEPPER) CONFIGURATION
####################################################################

[stepper_c]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
microsteps: 128
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: ^PC4
homing_speed: 60
homing_retract_dist: 5.0
homing_retract_speed: 10

#-----------------------------------------------------------------#

[tmc2209 stepper_c]
uart_pin: PD4
interpolate: False
run_current: 1.138
sense_resistor: 0.110
stealthchop_threshold: 99999

####################################################################
# EXTRUDEUR CONFIGURATION
####################################################################

[extruder]
step_pin: PD6
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: !PD3
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !PB3
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
microsteps: 32
#   tmc are ment to be set to the highest value the mcu can support this does not work the same as older drivers.
#	Don't touch rotation distance just this if you want to change it (klipper will calculate stepping automatically)
#   The number of microsteps the stepper motor driver uses. This
#   parameter must be provided.
rotation_distance: 22.353
#	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / <requested_extrude_distance>
#	default value get this from the bondtech hob gear. measure the hob on the lever that
#	value x 3.14 = rotation distance. flow in slicer should be within 10 percent up or down.
#	filament tolerance and density will affect flow actual flow.
#   The rotation_distance is the nominal distance (in mm) the toolhead
#   moves towards the cable winch for each full rotation of the
#   stepper motor. This parameter must be provided.
full_steps_per_rotation: 200
#	this applys to stepping as well no changes required.
#	Change this to 400 for 0.9 degree steppers again kliipper will calculate the new values automatically
#   The number of full steps for one rotation of the stepper motor.
#   Set this to 200 for a 1.8 degree stepper motor or set to 400 for a
#   0.9 degree motor. The default is 200.
gear_ratio: 50:17
#   change this to what applies to custom extruder this is for bondtech / bmg clone
#   See the "stepper" section for a description of the above
#   parameters. If none of the above parameters are specified then no
#   stepper will be associated with the nozzle hotend (though a
#   SYNC_EXTRUDER_MOTION command may associate one at run-time).
nozzle_diameter: 0.400
#   Diameter of the nozzle orifice (in mm). This parameter must be
#   provided.
filament_diameter: 1.750
#   The nominal diameter of the raw filament (in mm) as it enters the
#   extruder. This parameter must be provided.
heater_pin: PE5
#   PWM output pin controlling the heater. This parameter must be
#   provided.
sensor_type: EPCOS 100K B57560G104F
#   Type of sensor - common thermistors are "EPCOS 100K B57560G104F",
#   "ATC Semitec 104GT-2", "ATC Semitec 104NT-4-R025H42G", "Generic
#   3950","Honeywell 100K 135-104LAG-J01", "NTC 100K MGB18-104F39050L32",
#   "SliceEngineering 450", and "TDK NTCG104LH104JT1". See the
#   "Temperature sensors" section for other sensors. This parameter
#   must be provided.
sensor_pin: PC1
#   Analog input pin connected to the sensor. This parameter must be
#   provided.22.466
#control: pid
#   Control algorithm (either pid or watermark). This parameter must
#   be provided.
#pid_kp = 19.954  # enable these remember to run pid tune after setup. run fans 25-50 percent before running the command.
#pid_ki = 0.864
#pid_kd = 115.234
#   The proportional (pid_Kp), integral (pid_Ki), and derivative
#   (pid_Kd) settings for the PID feedback control system. Klipper
#   evaluates the PID settings with the following general formula:
#   heater_pwm = (Kp*error + Ki*integral(error) - Kd*derivative(error)) / 255
#   Where "error" is "requested_temperature - measured_temperature"
#   and "heater_pwm" is the requested heating rate with 0.0 being full
#   off and 1.0 being full on. Consider using the PID_CALIBRATE
#   command to obtain these parameters. The pid_Kp, pid_Ki, and pid_Kd
#   parameters must be provided for PID heaters.
min_temp: 0
max_temp: 275
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an error.
#   These parameters must be provided.
pressure_advance: 0
#	Set this from the slicer / Mainsail.
#	or start gcode its easier to do this in slicers with material specic gcode functions.
#	0.1-1.5 layer hight isn't usally benificial.
#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
pressure_advance_smooth_time: 0.040
#   A time range (in seconds) to use when calculating the average
#   extruder velocity for pressure advance. A larger value results in
#   smoother extruder movements. This parameter may not exceed 200ms.
#   This setting only applies if pressure_advance is non-zero. The
#   default is 0.040 (40 milliseconds).
max_extrude_only_distance: 800.0
#   Maximum length (in mm of raw filament) that a retraction or
#   extrude-only move may have. If a retraction or extrude-only move
#   requests a distance greater than this value it will cause an error
#   to be returned. The default is 50mm.
instantaneous_corner_velocity: 15
#   The equivalent of extruder jerk. this does not speed up pressue advance
#	like linear adance in marlin. higher values may improve bowden retract. eg 15 left slow as a safe default.
#   The maximum instantaneous velocity change (in mm/s) of the
#   extruder during the junction of two moves. The default is 1mm/s.
max_extrude_only_accel: 2000
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not have any impact on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.
max_extrude_cross_section: 50
#   3:1 = /3 = 2800 (stock xyz acc) The rough gear ratio of bondtech.
#   Maximum area (in mm^2) of an extrusion cross section (eg,
#   extrusion width multiplied by layer height). This setting prevents
#   excessive amounts of extrusion during relatively small XY moves.
#   If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 *
#   nozzle_diameter^2

#-----------------------------------------------------------------#

[tmc2209 extruder]
uart_pin: PD9
#   The pin connected to the TMC2209 PDN_UART line. This parameter
#   must be provided.
interpolate: True
#	This can usually be enabled without causing issues to reduce noise.
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This interpolation does
#   introduce a small systemic positional deviation - see
#   TMC_Drivers.md for details. The default is True.
run_current: 1.100
#	THIS IS RMS CURRENT NOT VREF FOR TMC. tmc spreadsheet tuned.
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current: 0.636
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
#stealthchop_threshold:999999
#	optional depends on setup and how much noise from the case is considered acceptable.
#	simply printing a stepper mount and hanging e off a cable eliminates the case noise.
#	this forces always silent. due to the stepper location turning this
#	off will result in amplifed noise due to the case acoustics.
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.

####################################################################
# BED CONFIGURATION
####################################################################

[heater_bed]
heater_pin: PA0
#   PWM output pin controlling the heater. This parameter must be
#   provided.
sensor_type: EPCOS 100K B57560G104F
#Generic 3950
#   One of "EPCOS 100K B57560G104F", "ATC Semitec 104GT-2",
#   "ATC Semitec 104NT-4-R025H42G", "Generic 3950",
#   "Honeywell 100K 135-104LAG-J01", "NTC 100K MGB18-104F39050L32",
#   "SliceEngineering 450", or "TDK NTCG104LH104JT1"
sensor_pin: PC0
#   Analog input pin connected to the thermistor. This parameter must
#   be provided.
min_temp: 0
max_temp: 110
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an error.
#   These parameters must be provided.
#control: pid
#   Control algorithm (either pid or watermark). This parameter must
#   be provided.
#pid_kp = 68.574
#pid_ki = 0.981
#pid_kd = 1198.334
#   The proportional (pid_Kp), integral (pid_Ki), and derivative
#   (pid_Kd) settings for the PID feedback control system. Klipper
#   evaluates the PID settings with the following general formula:
#   heater_pwm = (Kp*error + Ki*integral(error) - Kd*derivative(error)) / 255
#   Where "error" is "requested_temperature - measured_temperature"
#   and "heater_pwm" is the requested heating rate with 0.0 being full
#   off and 1.0 being full on. Consider using the PID_CALIBRATE
#   command to obtain these parameters. The pid_Kp, pid_Ki, and pid_Kd
#   parameters must be provided for PID heaters.

####################################################################
# REFROIDISSEMENT
####################################################################

[fan]
pin: PC14
#   Output pin controlling the fan. This parameter must be provided.
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
#cycle_time: 0.02817 #35.5hrz
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
kick_start_time: 0.0
#   Time (in seconds) to run the fan at full speed when either first
#   enabling or increasing it by more than 50% (helps get the fan
#   spinning). The default is 0.100 seconds.

#-----------------------------------------------------------------#

[heater_fan heatsink_fan]
pin: PB0 #PB1
#   Output pin controlling the fan. This parameter must be provided.
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0
#cycle_time: 0.02817 #35.5hrz
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
kick_start_time: 0.0
#   Time (in seconds) to run the fan at full speed when either first
#   enabling or increasing it by more than 50% (helps get the fan
#   spinning). The default is 0.100 seconds.

####################################################################
# DELTA CALIBRATE - MESH SETTINGS - PROBE
####################################################################

[delta_calibrate]
radius: 127.5
#   alternate option tehcnically more correct square in circle =195.086. /2 =97.543
#   Radius (in mm) of the area that may be probed. This is the radius
#   of nozzle coordinates to be probed; if using an automatic probe
#   with an XY offset then choose a radius small enough so that the
#   probe always fits over the bed. This parameter must be provided.
speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 30
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.

#-----------------------------------------------------------------#

[bed_mesh]
speed: 100
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 30
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
mesh_radius: 125
#   Defines the radius of the mesh to probe for round beds. Note that
#   the radius is relative to the coordinate specified by the
#   mesh_origin option. This parameter must be provided for round beds
#   and omitted for rectangular beds.
mesh_origin: 0,0
#   Defines the center X, Y coordinate of the mesh for round beds. This
#   coordinate is relative to the probe's location. It may be useful
#   to adjust the mesh_origin in an effort to maximize the size of the
#   mesh radius. Default is 0, 0. This parameter must be omitted for
#   rectangular beds.
round_probe_count: 11
#   For round beds, this integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
fade_end: 10.0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
#move_check_distance: 3.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2, 2
#   A comma separated pair of integers X, Y defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2, 2.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
#bicubic_tension: .1
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
#relative_reference_index:
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.

#-----------------------------------------------------------------#

[probe]
pin: ^!PC8
#   Probe detection pin. If the pin is on a different microcontroller
#   than the Z steppers then it enables "multi-mcu homing". This
#   parameter must be provided.
x_offset: 0.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: 0.0
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#z_offset: 16.0
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 10
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 3
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
sample_retract_dist: 3
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
lift_speed: 50.0
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
samples_tolerance: 0.02
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
samples_tolerance_retries: 5
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.


####################################################################
# PROTECTION THERMAL
####################################################################

[verify_heater extruder]
max_error: 130
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#-----------------------------------------------------------------#

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

####################################################################
# ENDSTOP
#
# If no STEPPER parameter is provided then this command will reports statistics
# on endstop stepper phases during past homing operations.
# When a STEPPER parameter is provided it arranges for the given endstop phase
# setting to be written to the config file (in conjunction with the SAVE_CONFIG command).
####################################################################

[endstop_phase stepper_a]
endstop_align_zero: false

[endstop_phase stepper_b]
endstop_align_zero: false

[endstop_phase stepper_c]
endstop_align_zero: false

####################################################################
# CAPTEUR DE FIN DE FILAMENT
####################################################################

[filament_switch_sensor filament_sensor]
switch_pin: PA4
#   The pin on which the switch is connected. This parameter must be
#   provided.
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode: PAUSE
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 2.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.

####################################################################
# INPUT SHAPER
####################################################################

[input_shaper]
#shaper_type_x = ei
#shaper_freq_x = 43.8
#shaper_type_y = mzv
#shaper_freq_y = 45.8

####################################################################
# AUTRES
####################################################################

[temperature_sensor Orange_pi]
sensor_type: temperature_host
#-----------------------------------------------------------------#
[temperature_sensor Super_Racer]
sensor_type: temperature_mcu
#-----------------------------------------------------------------#
[gcode_arcs]
resolution: 1.0
#-----------------------------------------------------------------#
[pause_resume]
#-----------------------------------------------------------------#
[display_status]
#-----------------------------------------------------------------#
[respond]
#-----------------------------------------------------------------#
[exclude_object]

####################################################################
# ALIAS PINS
####################################################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5,  EXP1_3=PD13, EXP1_5=PE14, EXP1_7=PD11, EXP1_9=<GND>,
    EXP1_2=PE13, EXP1_4=PC6,  EXP1_6=PE15, EXP1_8=PD10, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE8, EXP2_5=PE11, EXP2_7=PE12,  EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PE10, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<3.3v>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"

####################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 16
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.574
#*# pid_ki = 0.981
#*# pid_kd = 1198.334
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.954
#*# pid_ki = 0.864
#*# pid_kd = 115.234
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 45.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 48.2
#*#
#*# [endstop_phase stepper_a]
#*# trigger_phase = 83/512
#*#
#*# [endstop_phase stepper_b]
#*# trigger_phase = 509/512
#*#
#*# [endstop_phase stepper_c]
#*# trigger_phase = 486/512
#*#
#*# [printer]
#*# delta_radius = 151.970247
#*#
#*# [stepper_a]
#*# angle = 209.982521
#*# arm_length = 315.000000
#*# position_endstop = 333.680185
#*#
#*# [stepper_b]
#*# angle = 329.908636
#*# arm_length = 315.000000
#*# position_endstop = 334.640698
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 315.000000
#*# position_endstop = 334.851086
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.140114, -0.140114, -0.140114, -0.140114, -0.140114, -0.140114, -0.140114, -0.140114, -0.140114, -0.140114, -0.140114
#*# 	  -0.017369, -0.017369, -0.017369, -0.044994, -0.032236, -0.045413, -0.099409, -0.116201, -0.086511, -0.086511, -0.086511
#*# 	  0.003272, 0.003272, -0.041258, -0.038337, -0.002259, 0.010206, -0.005036, -0.033767, -0.037901, -0.016086, -0.016086
#*# 	  0.018192, 0.018192, -0.002418, -0.017629, 0.008852, 0.034494, 0.034112, 0.019361, 0.004258, -0.004613, -0.004613
#*# 	  0.004599, 0.004599, 0.004763, -0.010919, -0.000712, 0.034198, 0.056589, 0.065910, 0.037672, 0.020792, 0.020792
#*# 	  -0.025862, -0.013097, 0.014381, 0.010595, 0.006852, 0.022948, 0.047886, 0.067276, 0.048574, -0.006171, -0.052743
#*# 	  -0.020500, -0.020500, 0.001097, 0.010341, 0.013523, 0.005496, 0.031246, 0.052274, 0.029796, -0.005508, -0.005508
#*# 	  -0.016956, -0.016956, 0.013780, 0.023863, 0.023521, -0.004171, -0.003518, 0.008429, 0.005820, -0.035317, -0.035317
#*# 	  0.013935, 0.013935, 0.003381, -0.002076, 0.009000, -0.006045, -0.033241, -0.032644, -0.034800, -0.116734, -0.116734
#*# 	  0.029694, 0.029694, 0.029694, 0.019970, 0.015584, 0.002853, -0.012934, -0.081641, -0.156022, -0.156022, -0.156022
#*# 	  0.017787, 0.017787, 0.017787, 0.017787, 0.017787, 0.017787, 0.017787, 0.017787, 0.017787, 0.017787, 0.017787
#*# x_count = 11
#*# y_count = 11
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -125.0
#*# max_x = 125.0
#*# min_y = -125.0
#*# max_y = 125.0
#*#
#*# [delta_calibrate]
#*# height0 = 16.0
#*# height0_pos = 203369.667,203843.333,204092.000
#*# height1 = 16.0
#*# height1_pos = 247117.667,247697.667,180019.667
#*# height2 = 16.0
#*# height2_pos = 198426.000,273111.667,199155.333
#*# height3 = 16.0
#*# height3_pos = 180250.667,240202.000,240533.000
#*# height4 = 16.0
#*# height4_pos = 197029.667,197447.000,251053.667
#*# height5 = 16.0
#*# height5_pos = 233435.000,182138.000,234151.000
#*# height6 = 16.0
#*# height6_pos = 260721.667,198122.333,198311.667
